{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header-logo.svg"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardDelete","type","aria-label","link","name","onCardClick","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","fullName","aboutMe","method","body","JSON","stringify","nameCard","linkToImage","elemId","newAvatar","authorization","PopupWithForm","isOpen","onSubmit","onClose","title","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","required","minLength","maxLength","value","onChange","evt","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","isCardDeletePopupOpen","setIsCardDeletePopupOpen","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","user","catch","err","console","log","Provider","deleteCard","filter","c","addLike","newCard","newCards","deleteLike","updateAvatar","setUserInfo","item","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1b447d47.chunk.js","sourcesContent":["import React from 'react';\nimport headerLogo from '../images/header-logo.svg';\n\nfunction Header() {\n    return (\n          <header className=\"header\">\n              <img className=\"header__logo\" src={headerLogo} alt=\"Лого\"/>\n          </header>\n    );\n  }\n  \n  export default Header;\n  ","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`element__button-like ${isLiked ? 'element__button-like_active' : ''}`);\n\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleCardDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n\n    return (\n        <div className=\"element\">\n            {isOwn ? (<button className=\"element__button-remove transparent\" onClick={handleCardDeleteClick} type=\"button\" aria-label=\"Удалить\"></button>) : ('')}\n            <img src={props.card.link} className=\"element__image\" alt={props.card.name} onClick={handleClick} />\n            <h3 className=\"element__title\">{props.card.name}</h3>\n            <button className={`card__like ${cardLikeButtonClassName} transparent`} onClick={handleLikeClick} type=\"button\" aria-label=\"Нравиться\"></button>\n            <span className=\"element__number-likes\">{props.card.likes.length}</span>\n        </div>\n    )\n}\nexport default Card;","import React from 'react';\n//import api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div onClick={props.onEditAvatar} className=\"profile__avatar-edit\" >\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\" />\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__edit-form\">\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\n                        <button onClick={props.onEditProfile} className=\"profile__button profile__edit-button transparent\" type=\"button\"\n                            aria-label=\"Редактировать\">\n                        </button>\n                    </div>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button onClick={props.onAddPlace} className=\"profile__button profile__add-button transparent\" type=\"button\" aria-label=\"Добавить\">\n                </button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map((card) => <Card\n                    card={card}\n                    key={card._id}\n                    onCardClick={props.onCardClick}\n                    onCardDelete={props.onCardDelete}\n                    onCardLike={props.onCardLike}\n                />)}\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n    }\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    setUserInfo(fullName, aboutMe) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: fullName,\n                about: aboutMe\n            })\n        })\n            .then(this._getResponseData)\n    }\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    addNewCard(nameCard, linkToImage) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: nameCard,\n                link: linkToImage\n            })\n        })\n            .then(this._getResponseData)\n    }\n    deleteCard(elemId) {\n        return fetch(`${this._baseUrl}/cards/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._getResponseData)\n    }\n    addLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    deleteLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    updateAvatar(newAvatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: newAvatar\n            })\n        })\n            .then(this._getResponseData)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'b1f35061-c301-414a-92c3-da1eeb67e987',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <form className=\"popup__form\" name={props.name} onSubmit={props.onSubmit}>\n                    <button className=\"popup__close-icon transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <h2 className=\"popup__title\">{props.title}</h2>\n\n                    {props.children}\n\n                    <button type=\"submit\" className=\"popup__button-save\">{props.buttonText}</button>\n                </form>\n            </div>\n        </section>\n    )\n}\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n    return (\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"full_name\" type=\"text\" id=\"name-input\" className=\"popup__input popup__input_name\"\n                    placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"about_me\" type=\"text\" id=\"about-me-input\"\n                    className=\"popup__input popup__input_about-me\"\n                    placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\" value={description} onChange={handleChangeDescription} />\n                <span className=\"popup__input-error\" id=\"about-me-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm name=\"update-avatar\" title=\"Обновить аватар\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"link_to_avatar\" type=\"url\" id=\"link-input\" ref={avatarRef}\n                    className=\"popup__input popup__input_link-to-avatar\" placeholder=\"Ссылка на новый аватар\"\n                    required />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n\n        </PopupWithForm>\n    )\n}\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeLink(evt) {\n        setLink(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            link,\n        })\n    }\n\n    return (\n        <PopupWithForm name=\"card\" title=\"Новое место\" buttonText=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"name_card\" type=\"text\" id=\"card-input\"\n                    className=\"popup__input popup__input_name-card\" placeholder=\"Название\" required\n                    minLength=\"1\" maxLength=\"30\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"card-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"link_to_image\" type=\"url\" id=\"link-input\"\n                    className=\"popup__input popup__input_link-to-image\" placeholder=\"Ссылка на картинку\"\n                    required value={link} onChange={handleChangeLink} />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction ImagePopup(props) {\n    if (!props.card) { return false }\n    else {\n        return (\n            <section className=\"popup popup_images popup_opened\">\n                <figure className=\"popup__container-image\">\n                    <button className=\"popup__close-icon popup__close-image transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <img src={props.card.link} className=\"popup__preview\" alt={props.card.name} />\n                    <figcaption className=\"popup__title-image\">{props.card.name}</figcaption>\n                </figure>\n            </section>\n        )\n    }\n}\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport api from '../utils/Api'\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport '../App.css';\n\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n    const [cards, setCards] = React.useState([])\n\n    const handleEditAvatarClick = () => { setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen); }\n    const handleEditProfileClick = () => { setIsEditProfilePopupOpen(!isEditProfilePopupOpen); }\n    const handleAddPlaceClick = () => { setIsAddPlacePopupOpen(!isAddPlacePopupOpen); }\n    const handleCardClick = (card) => { setSelectedCard(card); }\n    const handleCardDeleteClick = (card) => {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((c) => c._id !== card._id));\n            })\n            .catch((err) => { console.log(err); });\n    }\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked)\n            api.addLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                });\n        if (isLiked)\n            api.deleteLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                });\n    }\n    const handleUpdateUser = (user) => {\n        api.setUserInfo(user.name, user.about)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: user.name,\n                    about: user.about,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const handleUpdateAvatar = (user) => {\n        api.updateAvatar(user.avatar)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: user.avatar,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const handleAddPlaceSubmit = (item) => {\n        api.addNewCard(item.name, item.link)\n            .then((newCard) => {\n                setCards(\n                    [newCard, ...cards]\n                );\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const closeAllPopups = () => {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setSelectedCard(false)\n        setIsCardDeletePopupOpen(false)\n    }\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, res]) => {\n                setCurrentUser(user);\n                setCards(res)\n\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header />\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    cards={cards}\n                    onCardClick={handleCardClick}\n                    onCardDelete={handleCardDeleteClick}\n                    onCardLike={handleCardLike}\n                />\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n                <PopupWithForm name=\"remove-card\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isCardDeletePopupOpen} onClose={closeAllPopups}\n                />\n                <ImagePopup name=\"images\" card={selectedCard} onClose={closeAllPopups} />\n                <Footer />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header-logo.c6f11019.svg\";"],"sourceRoot":""}